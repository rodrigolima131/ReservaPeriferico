

@inject ThemeService ThemeService
@inject IJSRuntime JSRuntime

<MudNavMenu Class="mt-4">
    <!-- Informações do Usuário -->
    <MudPaper Class="ma-4 pa-3" Elevation="1" Style="background: var(--mud-palette-primary-lighten);">
        <MudStack Spacing="2">
            <MudText Typo="Typo.subtitle2" Style="color: white;">
                <MudIcon Icon="@Icons.Material.Filled.Person" Size="Size.Small" Class="mr-2" />
                Administrador
            </MudText>
            <MudText Typo="Typo.caption"Style="color: white;">
                admin@sistema.com
            </MudText>
        </MudStack>
    </MudPaper>

    <MudText Typo="Typo.subtitle2" Class="ml-4 mb-2" Color="Color.Primary">Menu</MudText>
    <MudNavLink Href="dashboard" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Dashboard">
        Dashboard
    </MudNavLink>
    <MudNavLink Href="equipes" Icon="@Icons.Material.Filled.Groups">
        Equipes
    </MudNavLink>
    <MudNavLink Href="perifericos" Icon="@Icons.Material.Filled.Computer">
        Periféricos
    </MudNavLink>
    
    <MudText Typo="Typo.subtitle2" Class="ml-4 mb-2 mt-4" Color="Color.Primary">Reservas</MudText>
    <MudNavLink Href="reserva" Icon="@Icons.Material.Filled.Add">
        Nova Reserva
    </MudNavLink>
    <MudNavLink Href="minhas-reservas" Icon="@Icons.Material.Filled.Event">
        Minhas Reservas
    </MudNavLink>
    <MudNavLink Href="gerenciar-reservas" Icon="@Icons.Material.Filled.ManageAccounts">
        Gerenciar Reservas
    </MudNavLink>
    
    <MudDivider Class="my-2" />
    
    <!-- Botão de Alternar Tema -->
    <MudNavLink OnClick="ToggleTheme" Icon="@(ThemeService.IsDarkMode ? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode)" Color="Color.Primary">
        @(ThemeService.IsDarkMode ? "Modo Claro" : "Modo Escuro")
    </MudNavLink>
    
    <!-- Botão de Logout -->
    <MudNavLink Href="logout" Icon="@Icons.Material.Filled.Logout" Color="Color.Error">
        Sair
    </MudNavLink>
</MudNavMenu>

@code {
    private async Task ToggleTheme()
    {
        ThemeService.ToggleTheme();
        
        // Salvar preferência no localStorage
        try
        {
            var theme = ThemeService.IsDarkMode ? "dark" : "light";
            await JSRuntime.InvokeVoidAsync("themeService.setTheme", theme);
        }
        catch
        {
            // Ignorar erros de localStorage
        }
    }
}


